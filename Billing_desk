#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <stdbool.h>
int cnt;
struct date
{
  int day, month,year;
};
struct node
{
  int key, app_no,deposit,charge,bed;
  char name[20]; long int No, Ano;
  struct date Date;
  struct node *prev;
  struct node *next;
};

 void find(struct node *head,int no)
{ 
  struct node *p, *q;
  p=head;
  q=head->next;
  

  while(q->app_no != no)
  {
    p = p-> next;
    q = q-> next;
  }
  {
    printf("application number:\t%d",q->app_no);
    printf("applicant name:\t%s",q->name);
    printf("applicant contact number:\t%ld",q->No);
    printf("applicant guardian contact number:\t%ld",q->Ano);
    printf("applicant bill till date:\t%d",q->charge);
  }
}

struct node *add(struct node *head)
{
  
  struct node *temp = (struct node*) malloc(sizeof(struct node));
  printf("Enter application number:\t"); scanf("%d",&temp->app_no);
  printf("Enter todays date in DD MM YYYY format:\t"); 
  scanf("%d",&temp->Date.day);
  scanf("%d",&temp->Date.month);
  scanf("%d",&temp->Date.year);
  printf("Enter applicant name:\t"); scanf("%s",temp->name);
  printf("Enter type of bed required: 1. General  2. ICU\t:");
  scanf("%d",&temp->bed);
  printf("Registration successfull.\nBed no allocated is %d\n",cnt); head->key=cnt;
  printf("Enter patient contact number:\t"); scanf("%ld",&temp->No);
  printf("Enter patient gaurdian contact number:\t"); scanf("%ld",&temp->Ano);
  printf("Enter deposit deposited:\t"); scanf("%d",&temp->deposit);
  cnt++;
  head->next=temp;
  head=temp;
  return head;
  //return cnt;
}

int Valid_Date(int day, int mon, int year)    
{
    int is_valid = 1, is_leap = 0;
    if (year >= 1800 && year <= 9999) 
    {
        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
        {
            is_leap = 1;
        }
        if(mon >= 1 && mon <= 12)
        {
            if (mon == 2)
            {
                if (is_leap && day == 29) 
                {
                    is_valid = 1;
                }
                else if(day > 28) 
                {
                    is_valid = 0;
                }
            }
            else if (mon == 4 || mon == 6 || mon == 9 || mon == 11) 
            {
                if (day > 30)
                {
                    is_valid = 0;
                }
            }
            else if(day > 31)
            {            
                is_valid = 0;
            }        
        }
        else
        {
            is_valid = 0;
        }
    }
    else
    {
        is_valid = 0;
    }
    return is_valid;
}

int Dbtw(int day2, int mon2,int  year2,int day1, int mon1, int year1)
{
  int Ddiff, Mdiff, Ydiff,days;
  if(!Valid_Date(day1, mon1, year1))
    {
        printf("First date is invalid.\n");        
    }
    if(!Valid_Date(day2, mon2, year2))
    {
        printf("Second date is invalid.\n");
    }       
    if(day2 < day1)
    {      
        if (mon2 == 3)
        {
            if ((year2 % 4 == 0 && year2 % 100 != 0) || (year2 % 400 == 0)) 
            {
                day2 += 29;
            }
            else
            {
                day2 += 28;
            }                        
        }
        else if (mon2 == 5 || mon2 == 7 || mon2 == 10 || mon2 == 12) 
        {
           day2 += 30; 
        }
        else
        {
           day2 += 31;
        }
        mon2 = mon2 - 1;
    }
    if (mon2 < mon1)
    {
        mon2 += 12;
        year2 -= 1;
    }       
    Ddiff = day2 - day1;
    Mdiff = mon2 - mon1;
    Ydiff = year2 - year1;

    printf("Total no of days: %d years %02d months and %02d days.\n", Ydiff, Mdiff, Ddiff);
    days=365*Ydiff+30* Mdiff+Ddiff;
    return days;
}

void update(struct node *head,int no)
{
  //printf("ho rh h");
  int ch,opt, m,p1[100],price[100];
  struct node *p, *q;
  p=head;
  q=head->next;
  price[1]=1500;price[2]=2500;price[3]=3000;price[4]=2000;price[5]=1000;
  p1[1]=50000;p1[2]=35000;p1[3]=40000;p1[4]=30000;p1[5]=100000;
  while(q->app_no != no)
  {
    p = p-> next;
    q = q-> next;
  }
  {
    printf("Select updates needed:\n1. New tests\n2. Surgery\n3. Extra charge\n4. Medicine fair\n5. Return medicine\n ");
    scanf("%d",&ch);
    switch(ch)
    {
      case 1:
      opt=0;
      printf("1. CT scan \n2. MRI scan \n3. GEnetic Tests\n4. Endoscopy\n5. LAB tests\nSelect test treated with:\t");
      scanf("%d",&opt); {q->charge=q->charge+price[opt];}
      case 2:
      opt=0;
      printf("1. Appendix \n2. Sterilization \n3. hernia \n4. tonsillectomy \n5. Reconstructory surgeries\nSelect surgery performed:\t");
      (scanf("%d",&opt)); {q->charge=q->charge+p1[opt];}
      case 3:
      printf("Extra fair to be added:\t"); scanf("%d",&m);
      q->charge=q->charge+m; 
      case 4:
      printf("Medical fair to be added:\t"); scanf("%d",&m);
      q->charge=q->charge+m; 
      break;
      case 5:
      printf("Medical fair to be deleted:\t"); scanf("%d",&m);
      q->charge=q->charge-m; 
     // break;
    }
  } 
}

void show(struct node *head,int no)
{
  int fair,a,dd,mm,yy,days;
  struct node *p, *q;
  p=head;
  q=head->next;
  

  while(q->app_no != no)
  {
    p = p-> next;
    q = q-> next;
  }
  {
    days=2;
    printf("\nApplicant name:\t%s\n",q->name);
    printf("Enter the date in DD MM YYYY:\t");
    scanf("%d %d %d",&dd,&mm,&yy);
    days=Dbtw(dd,mm,yy,q->Date.day,q->Date.month,q->Date.year);
    q->charge=q->charge+(q->bed*200*days);
    printf("Application number:\t%d\n",q->app_no);
    printf("Applicant contact number:\t%ld\n",q->No);
    printf("Applicant guardian contact number:\t%ld\n",q->Ano);
    printf("%d  %d \n",q->charge,q->deposit);
    q->charge=q->charge-q->deposit;
    printf("Press 1 to apply Any insurrace to apply "); scanf("%d",&fair);
    if(fair==1)
    {
      printf("Choose your policy:\n1. Humana\n2. Eatna\n3. Signa\n4. WellCare");
      scanf("%d",&fair);
      switch(fair)
      {
        case 1: a=200000; break;
        case 2: a=500000; break;
        case 3: a=700000; break;
        case 4: a=1000000; break;
      }
    }
    if(a>q->charge){ printf("Insurance company has taken care of all your bills\n"); q->charge=0; }
    if(a<q->charge){ q->charge=q->charge-a; }
    printf("Applicant bill till date:\t%d\n",q->charge);
    
  }
}


void del(struct node* head, int no)
{
  struct node *p, *q;
  p=head;
  q=head->next;
  

  while(q->app_no != no)
  {
    p = p-> next;
    q = q-> next;
  }

  p -> next = q -> next;
  free(q);
}


int main(void) 
{
  int z;
  struct node *head = (struct node*) malloc(sizeof(struct node));
  head->next=NULL;
  struct node *link; link=head;
  do{
  int  appn,c,ch;
  printf("City Hospital Billing system.\n");
  printf("Choose the required option:\n1. Check for previous bill\n2. Register a patient\n3. Update Bill\n4. Show final bill\n5. Delete an applicant details\n\n");
  scanf("%d",&c);
  switch (c)
  {
    case 1:
    printf("Enter the application number:"); scanf("%d",&appn);
    find(link,appn);
    break;
    case 2:
    head= add(head);
    break;
    case 3:
    {printf("Enter application number:\t"); scanf("%d",&appn);}
    update(link,appn);
    break;
    case 4:
    {printf("Enter application number:\t"); scanf("%d",&appn);}
    show(link,appn);
    break;
    case 5:
    printf("Enter application number:\t"); scanf("%d",&appn);
    del(link,appn);
     

  

  }struct node *q=link;
  /*while(q!=NULL)
  {
    printf("%d ", q->app_no);
    q=q->next;
    printf("\n");
  }*/
  printf("\nPress 1 to continue\t"); scanf("%d",&z);
  
  }while(z==1);
}

